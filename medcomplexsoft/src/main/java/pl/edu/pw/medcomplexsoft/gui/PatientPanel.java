/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pl.edu.pw.medcomplexsoft.gui;

/**
 *
 * @author kubix
 */
public class PatientPanel extends javax.swing.JFrame {

    /**
     * Creates new form PatientPanel
     */
    public PatientPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        prescriptionMenu = new javax.swing.JMenu();
        actualPrescriptionItem = new javax.swing.JMenuItem();
        pastPrescriptionItem = new javax.swing.JMenuItem();
        appointmentMenu = new javax.swing.JMenu();
        newAppointmentItem = new javax.swing.JMenuItem();
        actualAppointmentsItem = new javax.swing.JMenuItem();
        pastAppointmentsItem = new javax.swing.JMenuItem();
        doctorsMenu = new javax.swing.JMenu();
        doctorsItem = new javax.swing.JMenuItem();
        serviceMenu = new javax.swing.JMenu();
        servicesItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(1200, 900));

        prescriptionMenu.setText("Moje Recepty");

        actualPrescriptionItem.setText("aktualne");
        actualPrescriptionItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualPrescriptionItemActionPerformed(evt);
            }
        });
        prescriptionMenu.add(actualPrescriptionItem);

        pastPrescriptionItem.setText("historia");
        pastPrescriptionItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pastPrescriptionItemActionPerformed(evt);
            }
        });
        prescriptionMenu.add(pastPrescriptionItem);

        jMenuBar1.add(prescriptionMenu);

        appointmentMenu.setText("Wizyty");

        newAppointmentItem.setText("Nowa Wizyta");
        newAppointmentItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newAppointmentItemActionPerformed(evt);
            }
        });
        appointmentMenu.add(newAppointmentItem);

        actualAppointmentsItem.setText("Aktualne Wizyty");
        actualAppointmentsItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualAppointmentsItemActionPerformed(evt);
            }
        });
        appointmentMenu.add(actualAppointmentsItem);

        pastAppointmentsItem.setText("Historia");
        pastAppointmentsItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pastAppointmentsItemActionPerformed(evt);
            }
        });
        appointmentMenu.add(pastAppointmentsItem);

        jMenuBar1.add(appointmentMenu);

        doctorsMenu.setText("Lekarze");

        doctorsItem.setText("przeglądaj");
        doctorsItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorsItemActionPerformed(evt);
            }
        });
        doctorsMenu.add(doctorsItem);

        jMenuBar1.add(doctorsMenu);

        serviceMenu.setText("Usługi");

        servicesItem.setText("Przeglądaj");
        servicesItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                servicesItemActionPerformed(evt);
            }
        });
        serviceMenu.add(servicesItem);

        jMenuBar1.add(serviceMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1200, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 880, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void actualPrescriptionItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualPrescriptionItemActionPerformed
        // TODO add your handling code here:
        PrescriptionListDialog receiptListDialog = new PrescriptionListDialog(null, true, null);
        receiptListDialog.setLocationRelativeTo(this.rootPane);
        receiptListDialog.showDialog();
    }//GEN-LAST:event_actualPrescriptionItemActionPerformed

    private void pastPrescriptionItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pastPrescriptionItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pastPrescriptionItemActionPerformed

    private void newAppointmentItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newAppointmentItemActionPerformed
        // TODO add your handling code here:
        // CreateNewAppointment window = new CreateNewAppointment(this, true);
        // window.setLocationRelativeTo(this.rootPane);
        // window.setVisible(true);
    }//GEN-LAST:event_newAppointmentItemActionPerformed

    private void actualAppointmentsItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualAppointmentsItemActionPerformed
        // TODO add your handling code here:
        ShowCurrentAppointments window = new ShowCurrentAppointments(this, true);
        window.setLocationRelativeTo(this.rootPane);
        window.setVisible(true);
    }//GEN-LAST:event_actualAppointmentsItemActionPerformed

    private void pastAppointmentsItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pastAppointmentsItemActionPerformed
        // TODO add your handling code here:
        ShowAppointmentsHistory window = new  ShowAppointmentsHistory(this, true);
        window.setLocationRelativeTo(this.rootPane);
        window.setVisible(true);
    }//GEN-LAST:event_pastAppointmentsItemActionPerformed

    private void doctorsItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorsItemActionPerformed
        // TODO add your handling code here:
        ShowDoctors window = new ShowDoctors(this, false);
        window.setLocationRelativeTo(this.rootPane);
        window.setVisible(true);
    }//GEN-LAST:event_doctorsItemActionPerformed

    private void servicesItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_servicesItemActionPerformed
        // TODO add your handling code here:
        ShowAvalibleServices window = new ShowAvalibleServices(this, false);
        window.setLocationRelativeTo(this.rootPane);
        window.setVisible(true);
    }//GEN-LAST:event_servicesItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PatientPanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem actualAppointmentsItem;
    private javax.swing.JMenuItem actualPrescriptionItem;
    private javax.swing.JMenu appointmentMenu;
    private javax.swing.JMenuItem doctorsItem;
    private javax.swing.JMenu doctorsMenu;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem newAppointmentItem;
    private javax.swing.JMenuItem pastAppointmentsItem;
    private javax.swing.JMenuItem pastPrescriptionItem;
    private javax.swing.JMenu prescriptionMenu;
    private javax.swing.JMenu serviceMenu;
    private javax.swing.JMenuItem servicesItem;
    // End of variables declaration//GEN-END:variables
}
